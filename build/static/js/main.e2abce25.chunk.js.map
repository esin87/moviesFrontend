{"version":3,"sources":["logo.svg","components/HeaderContainer.js","components/Home.js","components/Movie.js","components/User.js","components/Submit.js","components/Signup.js","components/Login.js","components/ViewAll.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderContainer","props","Navbar","className","src","logo","alt","Container","to","localStorage","id","username","Button","href","onClick","clear","variant","_","require","axios","Home","useState","allMovies","setAllMovies","randomMovie","setRandomMovie","useEffect","get","then","res","console","log","data","sample","getTopFive","genre","topFive","filter","movie","sort","a","b","avgRating","splice","length","bullets","map","index","key","_id","title","ViewAll","addViewAll","push","synopsis","substr","Movie","url","match","params","movieData","setMovieData","rating","setRating","usersRating","setUsersRating","loggedInBool","setloggedInBool","temp","ratings","find","createdBy","bool","userName","Math","abs","Form","Group","controlId","Label","Control","onChange","evt","target","value","as","defaultValue","preventDefault","ratingInfo","put","editRating","type","post","postRating","delete","history","User","userData","setUserData","user","movies","Create","setTitle","plot","setPlot","setGenre","Text","placeholder","rows","newMovie","catch","err","postMovie","Login","setCredentials","email","setEmail","password","setPassword","setUsername","error","setError","info","setItem","window","location","reload","getInfoAndValidate","style","color","movieList","setMovieList","App","exact","path","component","Submit","Signup","render","routerProps","Boolean","hostname","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2abce25.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.563dbecd.svg\";","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport logo from '../logo.svg';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Container';\nimport './HeaderContainer.css';\n\nconst HeaderContainer = props => {\n  return (\n    <div>\n      <Navbar className=\"nav-bar\">\n        <img className=\"logo\" src={logo} alt=\"logo\" />\n        <Container></Container>\n        <Container>\n          <div className=\"headRow\"></div>\n          <Link to=\"/\">\n            <h3 className=\"homeHead\">Home </h3>\n          </Link>\n          {localStorage.id && (\n            <Link to=\"/new\">\n              <h3 className=\"submitHead\">Submit</h3>\n            </Link>\n          )}\n\n          {!localStorage.id && (\n            <Link to=\"/login\">\n              <h3 className=\"loginHead\">Log in</h3>\n            </Link>\n          )}\n\n          {localStorage.id && (\n            <h3 className=\"hiHead\">\n              Hi,{' '}\n              <Link to={`/user/${localStorage.id}`}>\n                {localStorage.username}\n              </Link>\n              !\n            </h3>\n          )}\n          {!localStorage.id && <div></div>}\n          {localStorage.username && (\n            <Button\n              href=\"/moviesFrontend\"\n              onClick={() => {\n                localStorage.clear();\n              }}\n              variant=\"warning\"\n            >\n              <span className='logout'>LOGOUT</span>\n            </Button>\n          )}\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default HeaderContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport './Home.css';\n\nconst _ = require('lodash')\n\nconst axios = require('axios');\nconst url = 'https://cinopsis.herokuapp.com/api/movies';\n\nconst Home = props => {\n  const [allMovies, setAllMovies] = useState([]);\n  const [randomMovie, setRandomMovie] = useState();\n\n  //getting and setting all movies\n  useEffect(() => {\n    axios.get(url).then(res => {\n      console.log(res.data)\n      setRandomMovie(_.sample(res.data));\n      setAllMovies(res.data);\n    })\n    \n  }, []);\n\n  const getTopFive = genre => {\n    const topFive = allMovies\n      .filter(movie => movie.genre === genre)\n      .sort((a, b) => (a.avgRating > b.avgRating ? -1 : 1));\n    topFive.splice(5, topFive.length - 1);\n    const bullets = topFive.map((movie, index) => {\n      return (\n        <Link key={index} to={'movie/' + movie._id}>\n          <li>{movie.title}</li>\n        </Link>\n      );\n    });\n    if (bullets.length >= 5) {\n      const ViewAll = addViewAll(genre);\n      bullets.push(ViewAll);\n    }\n    return bullets;\n  };\n  const addViewAll = genre => {\n    return (\n      <Link key={genre} className=\"viewAll\" to={`genre/${genre}`}>\n        View All\n      </Link>\n    );\n  };\n\n  // const getLastMovie = () => {\n  //   console.log(allMovies[allMovies.length-1])\n  // }\n  return (\n    <>\n      <main className=\"homeMain\"><div>\n        <h1 className='topHead'>Top Submissions</h1>\n        <div className=\"homeList\">\n          <div className=\"comedy\">\n            <ul>\n              <h3>Comedy</h3>\n              {allMovies &&\n                (getTopFive('Comedy').length ? (\n                  getTopFive('Comedy')\n                ) : (\n                  <li>No Comedies At This Time</li>\n                ))}\n            </ul>\n          </div>\n          <div className=\"romance\">\n            <ul>\n              <h3>Romance</h3>\n              {allMovies &&\n                (getTopFive('Romance').length ? (\n                  getTopFive('Romance')\n                ) : (\n                  <li>No Romance At This Time</li>\n                ))}\n            </ul>\n          </div>\n          <div className=\"action\">\n            <ul>\n              <h3>Action</h3>\n              {allMovies &&\n                (getTopFive('Action').length ? (\n                  getTopFive('Action')\n                ) : (\n                  <li>No Actions At This Time</li>\n                ))}\n            </ul>\n          </div>\n          <div className=\"horror\">\n            <ul>\n              <h3>Horror</h3>\n              {allMovies &&\n                (getTopFive('Horror').length ? (\n                  getTopFive('Horror')\n                ) : (\n                  <li>No Horrors At This Time</li>\n                ))}\n            </ul>\n          </div>\n          <div className=\"drama\">\n            <ul>\n              <h3>Drama</h3>\n              {allMovies &&\n                (getTopFive('Drama').length ? (\n                  getTopFive('Drama')\n                ) : (\n                  <li>No Dramas At This Time</li>\n                ))}\n            </ul>\n            \n            </div>\n          </div><section className='ofTheDay'>\n              <h2 className='ofTheDayHead'>Random Cinopsis:</h2>\n              {randomMovie && (<div className='randomSyn'>\n              <h3><em>{randomMovie.title}</em></h3>\n              <span>{randomMovie.synopsis.substr(0, 250) + ' . . . '}</span>\n              <span>{<Link className='randomLink' to={`/movie/${randomMovie._id}`}>READ MORE</Link>}</span></div>)}\n            </section>\n        </div>\n        <div className=\"sideNote\">\n          <h1 className=\"asideAbout\">About</h1>\n          <article>\n          <p>Cinopsis is a community-driven website where anybody can write and submit their own film idea for feedback.</p>\n\n          <p>To submit your work, please create an account. Once you finish, a submit button will appear on the navigation bar at the top of the screen. Each submission requires a title, synopsis, and genre, and will be eligible to receive user rating immediately after submission. Submissions can be deleted by their creator at will.</p>\n\n          <p>Each user is allowed one rating, which they may edit at any time. The highest rated film ideas from each genre will appear on the home page above a link to view all movies from that genre. Each title will bring you to a page dedicated to that movie where you may submit your rating upon login. Please feel free to browse all works by a user by clicking on their username to visit their personal user page. </p>\n\n        </article>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link } from 'react-router-dom';\nimport './Movie.css';\nconst axios = require('axios');\nconst Movie = props => {\n   const url = `https://cinopsis.herokuapp.com/api/movies/${props.match.params.id}`;\n   const [movieData, setMovieData] = useState();\n   const [rating, setRating] = useState(0);\n   const [usersRating, setUsersRating] = useState();\n   const [loggedInBool, setloggedInBool] = useState();\n   useEffect(() => {\n      axios.get(url).then(res => {\n         setMovieData(res.data);\n         let temp = res.data.movie.ratings.find(\n            rating => localStorage.id === rating.createdBy\n         );\n         let bool = localStorage.id && !usersRating;\n         setloggedInBool(bool);\n         setUsersRating(temp);\n      });\n      // return function cleanup() {\n      //   movieData\n      // };\n   }, [movieData]);\n   const postRating = () => {\n      const ratingInfo = { rating, createdBy: localStorage.id };\n      axios.post(url + '/rating', ratingInfo);\n   };\n   const deleteMovie = () => {\n      axios.delete(url).then(res => props.history.push('/'));\n   };\n   const editRating = () => {\n      const ratingInfo = { rating, createdBy: localStorage.id };\n      axios.put(\n         `https://cinopsis.herokuapp.com/api/rating/${usersRating._id}`,\n         ratingInfo\n      );\n   };\n   return (\n      <div className='movieInfo'>\n         {movieData && (\n            <>\n               <h2> {movieData.movie.title}</h2>\n               <h6>\n                  author:\n                  <Link to={`/user/${movieData._id}`}>\n                     {' '}\n                     {movieData.userName}\n                  </Link>\n               </h6>\n               <h6>\n                  Average Rating:{' '}\n                  {movieData.movie.ratings.length > 0 &&\n                     Math.abs(movieData.movie.avgRating)}\n                  {!movieData.movie.ratings.length > 0 && 'No ratings yet!'}\n               </h6>\n               <h6>Synopsis:</h6>\n               <p>{movieData.movie.synopsis}</p>\n               <Form>\n                  {loggedInBool && (\n                     <Form.Group controlId='exampleForm.ControlSelect1'>\n                        <Form.Label>\n                           <span>Rate Movie:</span>\n                        </Form.Label>\n                        <Form.Control\n                           onChange={evt => setRating(evt.target.value)}\n                           className='genre-submit'\n                           as='select'\n                        >\n                           <option>0</option>\n                           <option>1</option>\n                           <option>2</option>\n                           <option>3</option>\n                           <option>4</option>\n                           <option>5</option>\n                           <option>6</option>\n                           <option>7</option>\n                           <option>8</option>\n                           <option>9</option>\n                           <option>10</option>\n                        </Form.Control>\n                     </Form.Group>\n                  )}\n                  {usersRating && (\n                     <div>\n                        <span>You've already rated this film:</span>\n                        <Form.Group controlId='exampleForm.ControlSelect1'>\n                           <Form.Control\n                              defaultValue={usersRating.rating}\n                              onChange={evt => setRating(evt.target.value)}\n                              className='genre-submit'\n                              as='select'\n                           >\n                              <option>0</option>\n                              <option>1</option>\n                              <option>2</option>\n                              <option>3</option>\n                              <option>4</option>\n                              <option>5</option>\n                              <option>6</option>\n                              <option>7</option>\n                              <option>8</option>\n                              <option>9</option>\n                              <option>10</option>\n                           </Form.Control>\n                           <Button\n                              onClick={evt => {\n                                 evt.preventDefault();\n                                 editRating();\n                              }}\n                              variant='warning'\n                              type='submit'\n                           >\n                              <span>EDIT RATING</span>\n                           </Button>\n                        </Form.Group>\n                     </div>\n                  )}\n                  {loggedInBool && (\n                     <Button\n                        onClick={evt => {\n                           evt.preventDefault();\n                           postRating();\n                        }}\n                        variant='warning'\n                        className='submitRating'\n                        type='submit'\n                     >\n                        <span>SUBMIT RATING</span>\n                     </Button>\n                  )}\n                  {!localStorage.id && (\n                     <p className='notification'>Log in to rate this movie.</p>\n                  )}\n                  {localStorage.id === movieData.movie.createdBy && (\n                     <Button\n                        onClick={evt => {\n                           evt.preventDefault();\n                           deleteMovie();\n                        }}\n                        variant='danger'\n                        type='submit'\n                     >\n                        <span>DELETE MOVIE</span>\n                     </Button>\n                  )}\n               </Form>\n            </>\n         )}\n      </div>\n   );\n};\nexport default Movie;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './User.css';\nconst axios = require('axios');\n\nconst User = props => {\n  const [userData, setUserData] = useState();\n  const url = `https://cinopsis.herokuapp.com/api/user/${props.match.match.params.id}`;\n  useEffect(() => {\n    axios.get(url).then(res => {\n      setUserData(res.data);\n    });\n  }, [url]);\n\n  return (\n    <div className=\"userInfo\">\n      {userData && (\n        <>\n          <ul>\n            <h2>{userData.user.userName}</h2>\n            {userData.movies.map((movie, index) => {\n              return (\n                <li key={index}>\n                  <Link to={`/movie/${movie._id}`}> {movie.title}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nimport './Submit.css';\nconst axios = require('axios');\n\nconst Create = props => {\n  const [title, setTitle] = useState('');\n  const [plot, setPlot] = useState('');\n  const [genre, setGenre] = useState('Horror');\n\n  const postMovie = () => {\n    const newMovie = {\n      title,\n      synopsis: plot,\n      genre,\n      createdBy: localStorage.id\n    };\n\n    axios\n      .post('https://cinopsis.herokuapp.com/api/movies', newMovie)\n      .then(res => {\n        props.history.push('/');\n      })\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <div>\n      <Form className=\"submitForm\">\n        <Form.Group\n          onChange={evt => setTitle(evt.target.value)}\n          className=\"title-submit\"\n          controlId=\"formBasicText\"\n        >\n          <Form.Label>Title</Form.Label>\n          <Form.Text className=\"text-muted\"></Form.Text>\n          <Form.Control type=\"text\" placeholder=\"Title\" />\n        </Form.Group>\n\n        <Form.Group\n          onChange={evt => setPlot(evt.target.value)}\n          className=\"synopsis-submit\"\n          controlId=\"exampleForm.ControlTextarea1\"\n        >\n          <Form.Label>Synopsis</Form.Label>\n          <Form.Text className=\"text-muted\"></Form.Text>\n          <Form.Control placeholder=\"Plot\" as=\"textarea\" rows=\"15\" />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Genre</Form.Label>\n          <Form.Control\n            onChange={evt => setGenre(evt.target.value)}\n            className=\"genre-submit\"\n            as=\"select\"\n          >\n            <option>Horror</option>\n            <option>Comedy</option>\n            <option>Action</option>\n            <option>Drama</option>\n            <option>Romance</option>\n          </Form.Control>\n\n          <Button\n            onClick={evt => {\n              evt.preventDefault();\n              postMovie();\n            }}\n            className=\"submission-button\"\n            variant=\"warning\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\n\nexport default Create;\n","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nconst axios = require('axios');\n\nconst Login = (props) => {\n\tconst [credentials, setCredentials] = useState({});\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [username, setUsername] = useState('');\n\tconst [error, setError] = useState('');\n\n\tconst getInfoAndValidate = () => {\n\t\tconst info = { email, password, userName: username };\n\n\t\tsetCredentials(info);\n\t\taxios\n\t\t\t.post('https://cinopsis.herokuapp.com/api/user', info)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.error) {\n\t\t\t\t\tsetError(res.data.error);\n\t\t\t\t} else {\n\t\t\t\t\tlocalStorage.setItem('id', res.data._id);\n\t\t\t\t\tlocalStorage.setItem('username', res.data.userName);\n\t\t\t\t\tprops.history.push('/');\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\n\t\t//needs validation\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Form className=\"login-form\">\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setUsername(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicText\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label><span>Username:</span></Form.Label>\n\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Choose a username\" />\n\t\t\t\t\t<Form.Text className=\"text-muted\"></Form.Text>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setEmail(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicEmail\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label><span>Email:</span></Form.Label>\n\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter email\" />\n\t\t\t\t\t<Form.Text className=\"text-muted\"></Form.Text>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setPassword(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicPassword\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label><span>Password</span></Form.Label>\n\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" />\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tgetInfoAndValidate();\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t>\n\t\t\t\t\t<span>SIGN UP</span>\n\t\t\t\t</Button>\n\t\t\t\t{error && <h3 style={{ color: 'red' }}>{error}</h3>}\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nconst axios = require('axios');\n\nconst Login = (props) => {\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [error, setError] = useState('');\n\n\tconst getInfoAndValidate = () => {\n\t\tconst info = { email, password };\n\n\t\taxios\n\t\t\t.post('https://cinopsis.herokuapp.com/api/user/login', info)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.error) {\n\t\t\t\t\tsetError(res.data.error);\n\t\t\t\t} else {\n\t\t\t\t\tlocalStorage.setItem('id', res.data._id);\n\t\t\t\t\tlocalStorage.setItem('username', res.data.userName);\n\t\t\t\t\tprops.history.push('/');\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\n\t\t//needs validation\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Form className=\"login-form\">\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setEmail(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicEmail\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label><span>Email:</span></Form.Label>\n\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter email\" />\n\t\t\t\t\t<Form.Text className=\"text-muted\"></Form.Text>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group\n\t\t\t\t\tonChange={(evt) => setPassword(evt.target.value)}\n\t\t\t\t\tcontrolId=\"formBasicPassword\"\n\t\t\t\t>\n\t\t\t\t\t<Form.Label><span>Password:</span></Form.Label>\n\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Enter password\" />\n\t\t\t\t</Form.Group>\n\t\t\t\t<div className='loginButtons'>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\t\tgetInfoAndValidate();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"warning\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLOGIN\n\t\t\t\t\t</Button>\n\t\t\t\t\t<a href=\"/signup\">\n\t\t\t\t\t\t<Button className='signButton' variant=\"secondary\">SIGN UP</Button>\n\t\t\t\t\t</a>\n\t\t\t\t\t{error && <h3 style={{ color: 'red' }}>{error}</h3>}\n\t\t\t\t</div>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default Login;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewAll.css';\n\nconst axios = require('axios');\nconst ViewAll = props => {\n  const url = `https://cinopsis.herokuapp.com/api/movies/?genre=${props.match.params.genre}`;\n  const [movieList, setMovieList] = useState([]);\n  useEffect(() => {\n    axios.get(url).then(res => setMovieList(res.data));\n  }, [url]);\n  return (\n    <div>\n      <ul className=\"allMovies\">\n        <h2>{props.match.params.genre}</h2>\n        {movieList.map(movie => {\n          return (\n            <Link to={`/movie/${movie._id}`}>\n              <li>{movie.title}</li>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ViewAll;\n","import React from 'react';\nimport HeaderContainer from './components/HeaderContainer';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport User from './components/User';\nimport Submit from './components/Submit';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport ViewAll from './components/ViewAll';\nimport { Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div>\n      <div>\n        <HeaderContainer />\n      </div>\n      <main className=\"appMain\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/new\" component={Submit} />\n          <Route exact path=\"/movie/:id\" component={Movie} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/genre/:genre\" component={ViewAll} />\n          <Route\n            exact\n            path=\"/user/:id\"\n            render={routerProps => <User match={routerProps} />}\n          ></Route>\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n\t<Router basename=\"/moviesFrontend\">\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}