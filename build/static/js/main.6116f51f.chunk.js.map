{"version":3,"sources":["logo.svg","components/HeaderContainer.js","components/Home.js","components/Movie.js","components/User.js","components/Submit.js","components/Signup.js","components/Login.js","components/ViewAll.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderContainer","props","Navbar","className","src","logo","alt","Container","to","localStorage","id","username","Button","href","onClick","clear","variant","_","require","axios","Home","useState","allMovies","setAllMovies","randomMovie","setRandomMovie","useEffect","get","then","res","sample","data","getTopFive","genre","topFive","filter","movie","sort","a","b","avgRating","splice","length","bullets","map","index","key","_id","title","ViewAll","addViewAll","push","synopsis","substr","Movie","url","match","params","movieData","setMovieData","rating","setRating","usersRating","setUsersRating","loggedInBool","setloggedInBool","temp","ratings","find","createdBy","bool","userName","Math","abs","Form","Group","controlId","Label","Control","onChange","evt","target","value","as","defaultValue","preventDefault","ratingInfo","put","editRating","type","post","postRating","delete","history","User","userData","setUserData","user","movies","Create","setTitle","plot","setPlot","setGenre","Text","placeholder","rows","newMovie","catch","err","console","log","postMovie","Login","setCredentials","email","setEmail","password","setPassword","setUsername","error","setError","info","setItem","window","location","reload","getInfoAndValidate","style","color","movieList","setMovieList","App","exact","path","component","Submit","Signup","render","routerProps","Boolean","hostname","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6116f51f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.563dbecd.svg\";","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport logo from '../logo.svg';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Container';\nimport './HeaderContainer.css';\n\nconst HeaderContainer = props => {\n   return (\n      <div>\n         <Navbar className='nav-bar'>\n            <img className='logo' src={logo} alt='logo' />\n            <Container></Container>\n            <Container>\n               <div className='headRow'></div>\n               <Link to='/'>\n                  <h3 className='homeHead'>Home </h3>\n               </Link>\n               {localStorage.id && (\n                  <Link to='/new'>\n                     <h3 className='submitHead'>Submit</h3>\n                  </Link>\n               )}\n\n               {!localStorage.id && (\n                  <Link to='/login'>\n                     <h3 className='loginHead'>Log in</h3>\n                  </Link>\n               )}\n\n               {localStorage.id && (\n                  <h3 className='hiHead'>\n                     Hi,{' '}\n                     <Link to={`/user/${localStorage.id}`}>\n                        {localStorage.username}\n                     </Link>\n                     !\n                  </h3>\n               )}\n               {!localStorage.id && <div></div>}\n               {localStorage.username && (\n                  <Button\n                     href='/moviesFrontend'\n                     onClick={() => {\n                        localStorage.clear();\n                     }}\n                     variant='warning'\n                  >\n                     <span className='logout'>LOGOUT</span>\n                  </Button>\n               )}\n            </Container>\n         </Navbar>\n      </div>\n   );\n};\n\nexport default HeaderContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport './Home.css';\n\nconst _ = require('lodash')\n\nconst axios = require('axios');\nconst url = 'https://cinopsis.herokuapp.com/api/movies';\n\nconst Home = props => {\n  const [allMovies, setAllMovies] = useState([]);\n  const [randomMovie, setRandomMovie] = useState();\n\n  //getting and setting all movies\n  useEffect(() => {\n    axios.get(url).then(res => {\n      setRandomMovie(_.sample(res.data));\n      setAllMovies(res.data);\n    })\n\n    return function cleanup() {\n      setAllMovies([]);\n      setRandomMovie();\n    }\n    \n  }, []);\n\n  const getTopFive = genre => {\n    const topFive = allMovies\n      .filter(movie => movie.genre === genre)\n      .sort((a, b) => (a.avgRating > b.avgRating ? -1 : 1));\n    topFive.splice(5, topFive.length - 1);\n    const bullets = topFive.map((movie, index) => {\n      return (\n        <Link key={index} to={'movie/' + movie._id}>\n          <li>{movie.title}</li>\n        </Link>\n      );\n    });\n    if (bullets.length >= 5) {\n      const ViewAll = addViewAll(genre);\n      bullets.push(ViewAll);\n    }\n    return bullets;\n  };\n\n  const addViewAll = genre => {\n    return (\n      <Link key={genre} className=\"viewAll\" to={`genre/${genre}`}>\n        View All\n      </Link>\n    );\n  };\n\n\n  return (\n    <>\n      <main className=\"homeMain\"><div>\n        <h1 className='topHead'>Top Submissions</h1>\n        <div className=\"homeList\">\n          <div className=\"comedy\">\n            <ul>\n              <h3>Comedy</h3>\n              {allMovies &&\n                (getTopFive('Comedy').length ? (\n                  getTopFive('Comedy')\n                ) : (\n                  <li>No Comedies At This Time</li>\n                ))}\n            </ul>\n          </div>\n          <div className=\"romance\">\n            <ul>\n              <h3>Romance</h3>\n              {allMovies &&\n                (getTopFive('Romance').length ? (\n                  getTopFive('Romance')\n                ) : (\n                  <li>No Romance At This Time</li>\n                ))}\n            </ul>\n          </div>\n          <div className=\"action\">\n            <ul>\n              <h3>Action</h3>\n              {allMovies &&\n                (getTopFive('Action').length ? (\n                  getTopFive('Action')\n                ) : (\n                  <li>No Actions At This Time</li>\n                ))}\n            </ul>\n          </div>\n          <div className=\"horror\">\n            <ul>\n              <h3>Horror</h3>\n              {allMovies &&\n                (getTopFive('Horror').length ? (\n                  getTopFive('Horror')\n                ) : (\n                  <li>No Horrors At This Time</li>\n                ))}\n            </ul>\n          </div>\n          <div className=\"drama\">\n            <ul>\n              <h3>Drama</h3>\n              {allMovies &&\n                (getTopFive('Drama').length ? (\n                  getTopFive('Drama')\n                ) : (\n                  <li>No Dramas At This Time</li>\n                ))}\n            </ul>\n            \n            </div>\n          </div><section className='ofTheDay'>\n              <h2 className='ofTheDayHead'>Random Cinopsis:</h2>\n              {randomMovie && (<div className='randomSyn'>\n              <h3><em>{randomMovie.title}</em></h3>\n              <span>{randomMovie.synopsis.substr(0, 250) + ' . . . '}</span>\n              <span>{<Link className='randomLink' to={`/movie/${randomMovie._id}`}>READ MORE</Link>}</span></div>)}\n            </section>\n        </div>\n        <div className=\"sideNote\">\n          <h1 className=\"asideAbout\">About</h1>\n          <article>\n          <p>Cinopsis is a community-driven website where anybody can write and submit their own film idea for feedback.</p>\n\n          <p>To submit your work, please create an account. Once you finish, a submit button will appear on the navigation bar at the top of the screen. Each submission requires a title, synopsis, and genre, and will be eligible to receive user rating immediately after submission. Submissions can be deleted by their creator at will.</p>\n\n          <p>Each user is allowed one rating, which they may edit at any time. The highest rated film ideas from each genre will appear on the home page above a link to view all movies from that genre. Each title will bring you to a page dedicated to that movie where you may submit your rating upon login. Please feel free to browse all works by a user by clicking on their username to visit their personal user page. </p>\n\n        </article>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link } from 'react-router-dom';\nimport './Movie.css';\nconst axios = require('axios');\nconst Movie = props => {\n   const url = `https://cinopsis.herokuapp.com/api/movies/${props.match.params.id}`;\n   const [movieData, setMovieData] = useState();\n   const [rating, setRating] = useState(0);\n   const [usersRating, setUsersRating] = useState();\n   const [loggedInBool, setloggedInBool] = useState();\n   useEffect(() => {\n      axios.get(url).then(res => {\n         setMovieData(res.data);\n         let temp = res.data.movie.ratings.find(\n            rating => localStorage.id === rating.createdBy\n         );\n         let bool = localStorage.id && !usersRating;\n         setloggedInBool(bool);\n         setUsersRating(temp);\n\n         return function cleanup() {\n           temp = null;\n           bool = null;\n           setMovieData({});\n           setRating(0);\n           setUsersRating({});\n           setloggedInBool(false);\n           \n         }\n      });\n      \n   }, [movieData]);\n   const postRating = () => {\n      const ratingInfo = { rating, createdBy: localStorage.id };\n      axios.post(url + '/rating', ratingInfo);\n   };\n   const deleteMovie = () => {\n      axios.delete(url).then(res => props.history.push('/'));\n   };\n   const editRating = () => {\n      const ratingInfo = { rating, createdBy: localStorage.id };\n      axios.put(\n         `https://cinopsis.herokuapp.com/api/rating/${usersRating._id}`,\n         ratingInfo\n      );\n   };\n   return (\n      <div className='movieInfo'>\n         {movieData && (\n            <>\n               <h2> {movieData.movie.title}</h2>\n               <h6>\n                  author:\n                  <Link to={`/user/${movieData._id}`}>\n                     {' '}\n                     {movieData.userName}\n                  </Link>\n               </h6>\n               <h6>\n                  Average Rating:{' '}\n                  {movieData.movie.ratings.length > 0 &&\n                     Math.abs(movieData.movie.avgRating)}\n                  {!movieData.movie.ratings.length > 0 && 'No ratings yet!'}\n               </h6>\n               <h6>Synopsis:</h6>\n               <p>{movieData.movie.synopsis}</p>\n               <Form>\n                  {loggedInBool && (\n                     <Form.Group controlId='exampleForm.ControlSelect1'>\n                        <Form.Label>\n                           <span>Rate Movie:</span>\n                        </Form.Label>\n                        <Form.Control\n                           onChange={evt => setRating(evt.target.value)}\n                           className='genre-submit'\n                           as='select'\n                        >\n                           <option>0</option>\n                           <option>1</option>\n                           <option>2</option>\n                           <option>3</option>\n                           <option>4</option>\n                           <option>5</option>\n                           <option>6</option>\n                           <option>7</option>\n                           <option>8</option>\n                           <option>9</option>\n                           <option>10</option>\n                        </Form.Control>\n                     </Form.Group>\n                  )}\n                  {usersRating && (\n                     <div>\n                        <span>You've already rated this film:</span>\n                        <Form.Group controlId='exampleForm.ControlSelect1'>\n                           <Form.Control\n                              defaultValue={usersRating.rating}\n                              onChange={evt => setRating(evt.target.value)}\n                              className='genre-submit'\n                              as='select'\n                           >\n                              <option>0</option>\n                              <option>1</option>\n                              <option>2</option>\n                              <option>3</option>\n                              <option>4</option>\n                              <option>5</option>\n                              <option>6</option>\n                              <option>7</option>\n                              <option>8</option>\n                              <option>9</option>\n                              <option>10</option>\n                           </Form.Control>\n                           <Button\n                              onClick={evt => {\n                                 evt.preventDefault();\n                                 editRating();\n                              }}\n                              variant='warning'\n                              type='submit'\n                           >\n                              <span>EDIT RATING</span>\n                           </Button>\n                        </Form.Group>\n                     </div>\n                  )}\n                  {loggedInBool && (\n                     <Button\n                        onClick={evt => {\n                           evt.preventDefault();\n                           postRating();\n                        }}\n                        variant='warning'\n                        className='submitRating'\n                        type='submit'\n                     >\n                        <span>SUBMIT RATING</span>\n                     </Button>\n                  )}\n                  {!localStorage.id && (\n                     <p className='notification'>Log in to rate this movie.</p>\n                  )}\n                  {localStorage.id === movieData.movie.createdBy && (\n                     <Button\n                        onClick={evt => {\n                           evt.preventDefault();\n                           deleteMovie();\n                        }}\n                        variant='danger'\n                        type='submit'\n                     >\n                        <span>DELETE MOVIE</span>\n                     </Button>\n                  )}\n               </Form>\n            </>\n         )}\n      </div>\n   );\n};\nexport default Movie;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './User.css';\nconst axios = require('axios');\n\nconst User = props => {\n  const [userData, setUserData] = useState();\n  const url = `https://cinopsis.herokuapp.com/api/user/${props.match.match.params.id}`;\n  useEffect(() => {\n    axios.get(url).then(res => {\n      setUserData(res.data);\n    });\n\n    return function cleanup() {\n      setUserData();\n    }\n  }, [url]);\n\n  return (\n    <div className=\"userInfo\">\n      {userData && (\n        <>\n          <ul>\n            <h2>{userData.user.userName}</h2>\n            {userData.movies.map((movie, index) => {\n              return (\n                <li key={index}>\n                  <Link to={`/movie/${movie._id}`}> {movie.title}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nimport './Submit.css';\nconst axios = require('axios');\n\nconst Create = props => {\n  const [title, setTitle] = useState('');\n  const [plot, setPlot] = useState('');\n  const [genre, setGenre] = useState('Horror');\n\n  const postMovie = () => {\n    const newMovie = {\n      title,\n      synopsis: plot,\n      genre,\n      createdBy: localStorage.id\n    };\n\n    axios\n      .post('https://cinopsis.herokuapp.com/api/movies', newMovie)\n      .then(res => {\n        props.history.push('/');\n      })\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <div>\n      <Form className=\"submitForm\">\n        <Form.Group\n          onChange={evt => setTitle(evt.target.value)}\n          className=\"title-submit\"\n          controlId=\"formBasicText\"\n        >\n          <Form.Label>Title</Form.Label>\n          <Form.Text className=\"text-muted\"></Form.Text>\n          <Form.Control type=\"text\" placeholder=\"Title\" />\n        </Form.Group>\n\n        <Form.Group\n          onChange={evt => setPlot(evt.target.value)}\n          className=\"synopsis-submit\"\n          controlId=\"exampleForm.ControlTextarea1\"\n        >\n          <Form.Label>Synopsis</Form.Label>\n          <Form.Text className=\"text-muted\"></Form.Text>\n          <Form.Control placeholder=\"Plot\" as=\"textarea\" rows=\"15\" />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Genre</Form.Label>\n          <Form.Control\n            onChange={evt => setGenre(evt.target.value)}\n            className=\"genre-submit\"\n            as=\"select\"\n          >\n            <option>Horror</option>\n            <option>Comedy</option>\n            <option>Action</option>\n            <option>Drama</option>\n            <option>Romance</option>\n          </Form.Control>\n\n          <Button\n            onClick={evt => {\n              evt.preventDefault();\n              postMovie();\n            }}\n            className=\"submission-button\"\n            variant=\"warning\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\n\nexport default Create;\n","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nconst axios = require('axios');\n\nconst Login = props => {\n   const [credentials, setCredentials] = useState({});\n   const [email, setEmail] = useState('');\n   const [password, setPassword] = useState('');\n   const [username, setUsername] = useState('');\n   const [error, setError] = useState('');\n\n   const getInfoAndValidate = () => {\n      const info = { email, password, userName: username };\n\n      setCredentials(info);\n      axios\n         .post('https://cinopsis.herokuapp.com/api/user', info)\n         .then(res => {\n            if (res.data.error) {\n               setError(res.data.error);\n            } else {\n               localStorage.setItem('id', res.data._id);\n               localStorage.setItem('username', res.data.userName);\n               props.history.push('/');\n               window.location.reload();\n            }\n         })\n         .catch(err => console.log(err));\n   };\n\n   return (\n      <div>\n         <Form className='login-form'>\n            <Form.Group\n               onChange={evt => setUsername(evt.target.value)}\n               controlId='formBasicText'\n            >\n               <Form.Label>\n                  <span>Username:</span>\n               </Form.Label>\n               <Form.Control type='text' placeholder='Choose a username' />\n               <Form.Text className='text-muted'></Form.Text>\n            </Form.Group>\n            <Form.Group\n               onChange={evt => setEmail(evt.target.value)}\n               controlId='formBasicEmail'\n            >\n               <Form.Label>\n                  <span>Email:</span>\n               </Form.Label>\n               <Form.Control type='email' placeholder='Enter email' />\n               <Form.Text className='text-muted'></Form.Text>\n            </Form.Group>\n\n            <Form.Group\n               onChange={evt => setPassword(evt.target.value)}\n               controlId='formBasicPassword'\n            >\n               <Form.Label>\n                  <span>Password</span>\n               </Form.Label>\n               <Form.Control type='password' placeholder='Password' />\n            </Form.Group>\n            <Button\n               onClick={evt => {\n                  evt.preventDefault();\n                  getInfoAndValidate();\n               }}\n               variant='secondary'\n               type='submit'\n            >\n               <span>SIGN UP</span>\n            </Button>\n            {error && <h3 style={{ color: 'red' }}>{error}</h3>}\n         </Form>\n      </div>\n   );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nconst axios = require('axios');\n\nconst Login = props => {\n   const [email, setEmail] = useState('');\n   const [password, setPassword] = useState('');\n   const [error, setError] = useState('');\n\n   const getInfoAndValidate = () => {\n      const info = { email, password };\n\n      axios\n         .post('https://cinopsis.herokuapp.com/api/user/login', info)\n         .then(res => {\n            if (res.data.error) {\n               setError(res.data.error);\n            } else {\n               localStorage.setItem('id', res.data._id);\n               localStorage.setItem('username', res.data.userName);\n               props.history.push('/');\n               window.location.reload();\n            }\n         })\n         .catch(err => console.log(err));\n   };\n\n   return (\n      <div>\n         <Form className='login-form'>\n            <Form.Group\n               onChange={evt => setEmail(evt.target.value)}\n               controlId='formBasicEmail'\n            >\n               <Form.Label>\n                  <span>Email:</span>\n               </Form.Label>\n               <Form.Control type='email' placeholder='Enter email' />\n               <Form.Text className='text-muted'></Form.Text>\n            </Form.Group>\n\n            <Form.Group\n               onChange={evt => setPassword(evt.target.value)}\n               controlId='formBasicPassword'\n            >\n               <Form.Label>\n                  <span>Password:</span>\n               </Form.Label>\n               <Form.Control type='password' placeholder='Enter password' />\n            </Form.Group>\n            <div className='loginButtons'>\n               <Button\n                  onClick={evt => {\n                     evt.preventDefault();\n                     getInfoAndValidate();\n                  }}\n                  variant='warning'\n                  type='submit'\n               >\n                  LOGIN\n               </Button>\n               <Link to='/signup'>\n                  <Button className='signButton' variant='secondary'>\n                     SIGN UP\n                  </Button>\n               </Link>\n\n               {error && <h3 style={{ color: 'red' }}>{error}</h3>}\n            </div>\n         </Form>\n      </div>\n   );\n};\n\nexport default Login;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewAll.css';\n\nconst axios = require('axios');\nconst ViewAll = props => {\n\n  const url = `https://cinopsis.herokuapp.com/api/movies/?genre=${props.match.params.genre}`;\n  const [movieList, setMovieList] = useState([]);\n\n  useEffect(() => {\n    axios.get(url).then(res => setMovieList(res.data));\n\n    return function cleanup() {\n      setMovieList([]);\n    }\n  }, [url]);\n  \n  return (\n    <div>\n      <ul className=\"allMovies\">\n        <h2>{props.match.params.genre}</h2>\n        {movieList.map(movie => {\n          return (\n            <Link to={`/movie/${movie._id}`}>\n              <li>{movie.title}</li>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ViewAll;\n","import React from 'react';\nimport HeaderContainer from './components/HeaderContainer';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport User from './components/User';\nimport Submit from './components/Submit';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport ViewAll from './components/ViewAll';\nimport { Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst App = () => {\n   return (\n      <div>\n         <div>\n            <HeaderContainer />\n         </div>\n         <main className='appMain'>\n            <Switch>\n               <Route exact path='/' component={Home} />\n               <Route exact path='/new' component={Submit} />\n               <Route exact path='/movie/:id' component={Movie} />\n               <Route exact path='/login' component={Login} />\n               <Route exact path='/signup' component={Signup} />\n               <Route exact path='/genre/:genre' component={ViewAll} />\n               <Route\n                  exact\n                  path='/user/:id'\n                  render={routerProps => <User match={routerProps} />}\n               ></Route>\n            </Switch>\n         </main>\n      </div>\n   );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n\t<Router basename=\"/moviesFrontend\">\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}