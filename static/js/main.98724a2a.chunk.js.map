{"version":3,"sources":["logo.svg","components/HeaderContainer.js","components/Home.js","components/Movie.js","components/User.js","components/Submit.js","components/Signup.js","components/Login.js","components/ViewAll.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderContainer","props","Navbar","className","src","logo","alt","Container","to","localStorage","id","username","Button","href","onClick","clear","variant","_","require","axios","Home","useState","allMovies","setAllMovies","randomMovie","setRandomMovie","useEffect","get","then","res","sample","data","getTopFive","genre","topFive","filter","movie","sort","a","b","avgRating","splice","length","bullets","map","index","key","_id","title","ViewAll","addViewAll","push","synopsis","substr","Movie","url","match","params","movieData","setMovieData","rating","setRating","usersRating","setUsersRating","loggedInBool","setloggedInBool","temp","ratings","find","createdBy","bool","userName","Math","abs","Form","Group","controlId","Label","Control","onChange","evt","target","value","as","defaultValue","preventDefault","ratingInfo","put","editRating","type","post","postRating","delete","history","User","userData","setUserData","user","movies","Create","setTitle","plot","setPlot","setGenre","Text","placeholder","rows","newMovie","catch","err","console","log","postMovie","Login","email","setEmail","password","setPassword","setUsername","error","setError","info","setItem","window","location","reload","getInfoAndValidate","style","color","movieList","setMovieList","App","exact","path","component","Submit","Signup","render","routerProps","Boolean","hostname","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98724a2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.563dbecd.svg\";","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport logo from '../logo.svg';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport './HeaderContainer.css';\n\nconst HeaderContainer = props => {\n  return (\n    <div>\n      <Navbar className=\"nav-bar\">\n        <img className=\"logo\" src={logo} alt=\"logo\" />\n        <Container></Container>\n        <Container>\n          <div className=\"headRow\"></div>\n          <Link to=\"/\">\n            <h3 className=\"homeHead\">Home </h3>\n          </Link>\n          {localStorage.id && (\n            // conditionally render a link to the submit component if user is logged in by using the localStorage\n            <Link to=\"/new\">\n              <h3 className=\"submitHead\">Submit</h3>\n            </Link>\n          )}\n\n          {!localStorage.id && (\n            //conditionally render a link to login component if user is not logged in\n            <Link to=\"/login\">\n              <h3 className=\"loginHead\">Log in</h3>\n            </Link>\n          )}\n\n          {localStorage.id && (\n            //conditionally render a link to the user component by checking that user is logged in and grabbing the username from the localstorage data\n            <h3 className=\"hiHead\">\n              Hi,{' '}\n              <Link to={`/user/${localStorage.id}`}>\n                {localStorage.username}\n              </Link>\n              !\n            </h3>\n          )}\n          {!localStorage.id && <div></div>}\n          {localStorage.username && (\n            //Clear the localStorage on logout\n            <Button\n              href=\"/moviesFrontend\"\n              onClick={() => {\n                localStorage.clear();\n              }}\n              variant=\"warning\"\n            >\n              <span className=\"logout\">LOGOUT</span>\n            </Button>\n          )}\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default HeaderContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport './Home.css';\n\nconst _ = require('lodash');\n\nconst axios = require('axios');\n\nconst Home = props => {\n  const [allMovies, setAllMovies] = useState([]);\n  const [randomMovie, setRandomMovie] = useState();\n\n  //getting and setting all movies\n  useEffect(() => {\n    const url = 'https://cinopsis.herokuapp.com/api/movies';\n    axios.get(url).then(res => {\n      setRandomMovie(_.sample(res.data));\n      setAllMovies(res.data);\n    });\n    //handles the reset of all variables  to their original state\n    return function cleanup() {\n      setAllMovies([]);\n      setRandomMovie();\n    };\n  }, []);\n\n  const getTopFive = genre => {\n    //filter through allMovies variable to get top five movies based on genre and averageRating and stores to topFive variable\n    const topFive = allMovies\n      .filter(movie => movie.genre === genre)\n      .sort((a, b) => (a.avgRating > b.avgRating ? -1 : 1));\n    topFive.splice(5, topFive.length - 1);\n    //map through topFive and creates a link to the url path for that individual movie\n    const bullets = topFive.map((movie, index) => {\n      return (\n        <Link key={index} to={'movie/' + movie._id}>\n          <li>{movie.title}</li>\n        </Link>\n      );\n    });\n    //Check to see if the length of bullets variable is equal to or greater than five\n    if (bullets.length >= 5) {\n      const ViewAll = addViewAll(genre);\n      bullets.push(ViewAll);\n    }\n    return bullets;\n  };\n\n  const addViewAll = genre => {\n    //renders a link to view all movies of a specific genre if bullets length is greater than 5\n    return (\n      <Link key={genre} className=\"viewAll\" to={`genre/${genre}`}>\n        View All\n      </Link>\n    );\n  };\n\n  return (\n    <>\n      <main className=\"homeMain\">\n        <div>\n          <h1 className=\"topHead\">Top Submissions</h1>\n          <div className=\"homeList\">\n            <div className=\"comedy\">\n              <ul>\n                <h3>Comedy</h3>\n                {allMovies &&\n                  (getTopFive('Comedy').length ? (\n                    getTopFive('Comedy')\n                  ) : (\n                    <li>No Comedies At This Time</li>\n                  ))}\n              </ul>\n            </div>\n            <div className=\"romance\">\n              <ul>\n                <h3>Romance</h3>\n                {allMovies &&\n                  (getTopFive('Romance').length ? (\n                    getTopFive('Romance')\n                  ) : (\n                    <li>No Romance At This Time</li>\n                  ))}\n              </ul>\n            </div>\n            <div className=\"action\">\n              <ul>\n                <h3>Action</h3>\n                {allMovies &&\n                  (getTopFive('Action').length ? (\n                    getTopFive('Action')\n                  ) : (\n                    <li>No Actions At This Time</li>\n                  ))}\n              </ul>\n            </div>\n            <div className=\"horror\">\n              <ul>\n                <h3>Horror</h3>\n                {allMovies &&\n                  (getTopFive('Horror').length ? (\n                    getTopFive('Horror')\n                  ) : (\n                    <li>No Horrors At This Time</li>\n                  ))}\n              </ul>\n            </div>\n            <div className=\"drama\">\n              <ul>\n                <h3>Drama</h3>\n                {allMovies &&\n                  (getTopFive('Drama').length ? (\n                    getTopFive('Drama')\n                  ) : (\n                    <li>No Dramas At This Time</li>\n                  ))}\n              </ul>\n            </div>\n          </div>\n          <section className=\"ofTheDay\">\n            <h2 className=\"ofTheDayHead\">Random Cinopsis:</h2>\n            {randomMovie && (\n              <div className=\"randomSyn\">\n                <h3>\n                  <em>{randomMovie.title}</em>\n                </h3>\n                <span>{randomMovie.synopsis.substr(0, 250) + ' . . . '}</span>\n                <span>\n                  {\n                    <Link\n                      className=\"randomLink\"\n                      to={`/movie/${randomMovie._id}`}\n                    >\n                      READ MORE\n                    </Link>\n                  }\n                </span>\n              </div>\n            )}\n          </section>\n        </div>\n        <div className=\"sideNote\">\n          <h1 className=\"asideAbout\">About</h1>\n          <article>\n            <p>\n              Cinopsis is a community-driven website where anybody can write and\n              submit their own film idea for feedback.\n            </p>\n\n            <p>\n              To submit your work, please create an account. Once you finish, a\n              submit button will appear on the navigation bar at the top of the\n              screen. Each submission requires a title, synopsis, and genre, and\n              will be eligible to receive user rating immediately after\n              submission. Submissions can be deleted by their creator at will.\n            </p>\n\n            <p>\n              Each user is allowed one rating, which they may edit at any time.\n              The highest rated film ideas from each genre will appear on the\n              home page above a link to view all movies from that genre. Each\n              title will bring you to a page dedicated to that movie where you\n              may submit your rating upon login. Please feel free to browse all\n              works by a user by clicking on their username to visit their\n              personal user page.{' '}\n            </p>\n          </article>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link } from 'react-router-dom';\nimport './Movie.css';\nconst axios = require('axios');\nconst Movie = props => {\n   const url = `https://cinopsis.herokuapp.com/api/movies/${props.match.params.id}`;\n   const [movieData, setMovieData] = useState();\n   const [rating, setRating] = useState(0);\n   const [usersRating, setUsersRating] = useState();\n   const [loggedInBool, setloggedInBool] = useState();\n   useEffect(() => {\n      axios.get(url).then(res => {\n         setMovieData(res.data);\n         let temp = res.data.movie.ratings.find(\n            rating => localStorage.id === rating.createdBy\n         );\n         let bool = localStorage.id && !usersRating;\n         setloggedInBool(bool);\n         setUsersRating(temp);\n\n         return function cleanup() {\n           temp = null;\n           bool = null;\n           setMovieData({});\n           setRating(0);\n           setUsersRating({});\n           setloggedInBool(false);\n           \n         }\n      });\n      \n   }, [movieData]);\n   const postRating = () => {\n      const ratingInfo = { rating, createdBy: localStorage.id };\n      axios.post(url + '/rating', ratingInfo);\n   };\n   const deleteMovie = () => {\n      axios.delete(url).then(res => props.history.push('/'));\n   };\n   const editRating = () => {\n      const ratingInfo = { rating, createdBy: localStorage.id };\n      axios.put(\n         `https://cinopsis.herokuapp.com/api/rating/${usersRating._id}`,\n         ratingInfo\n      );\n   };\n   return (\n      <div className='movieInfo'>\n         {movieData && (\n            <>\n               <h1> {movieData.movie.title}</h1>\n               <h6>\n                  author:\n                  <Link to={`/user/${movieData._id}`}>\n                     {' '}\n                     {movieData.userName}\n                  </Link>\n               </h6>\n               <h6>\n                  Average Rating:{' '}\n                  {movieData.movie.ratings.length > 0 &&\n                     Math.abs(movieData.movie.avgRating)}\n                  {!movieData.movie.ratings.length > 0 && 'No ratings yet!'}\n               </h6>\n               <h6>Synopsis:</h6>\n               <p>{movieData.movie.synopsis}</p>\n               <Form>\n                  {loggedInBool && (\n                     <Form.Group controlId='exampleForm.ControlSelect1'>\n                        <Form.Label>\n                           <span>Rate Movie:</span>\n                        </Form.Label>\n                        <Form.Control\n                           onChange={evt => setRating(evt.target.value)}\n                           className='genre-submit'\n                           as='select'\n                        >\n                           <option>0</option>\n                           <option>1</option>\n                           <option>2</option>\n                           <option>3</option>\n                           <option>4</option>\n                           <option>5</option>\n                           <option>6</option>\n                           <option>7</option>\n                           <option>8</option>\n                           <option>9</option>\n                           <option>10</option>\n                        </Form.Control>\n                     </Form.Group>\n                  )}\n                  {usersRating && (\n                     <div>\n                        <span>You've already rated this film:</span>\n                        <Form.Group controlId='exampleForm.ControlSelect1'>\n                           <Form.Control\n                              defaultValue={usersRating.rating}\n                              onChange={evt => setRating(evt.target.value)}\n                              className='genre-submit'\n                              as='select'\n                           >\n                              <option>0</option>\n                              <option>1</option>\n                              <option>2</option>\n                              <option>3</option>\n                              <option>4</option>\n                              <option>5</option>\n                              <option>6</option>\n                              <option>7</option>\n                              <option>8</option>\n                              <option>9</option>\n                              <option>10</option>\n                           </Form.Control>\n                           <Button\n                              onClick={evt => {\n                                 evt.preventDefault();\n                                 editRating();\n                              }}\n                              variant='warning'\n                              type='submit'\n                           >\n                              <span>EDIT RATING</span>\n                           </Button>\n                        </Form.Group>\n                     </div>\n                  )}\n                  {loggedInBool && (\n                     <Button\n                        onClick={evt => {\n                           evt.preventDefault();\n                           postRating();\n                        }}\n                        variant='warning'\n                        className='submitRating'\n                        type='submit'\n                     >\n                        <span>SUBMIT RATING</span>\n                     </Button>\n                  )}\n                  {!localStorage.id && (\n                     <p className='notification'>Log in to rate this movie.</p>\n                  )}\n                  {localStorage.id === movieData.movie.createdBy && (\n                     <Button\n                        onClick={evt => {\n                           evt.preventDefault();\n                           deleteMovie();\n                        }}\n                        variant='danger'\n                        type='submit'\n                     >\n                        <span>DELETE MOVIE</span>\n                     </Button>\n                  )}\n               </Form>\n            </>\n         )}\n      </div>\n   );\n};\nexport default Movie;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './User.css';\nconst axios = require('axios');\n\nconst User = props => {\n  const [userData, setUserData] = useState();\n  //match the user id with the Api user id using routerProps, and pass via url to api get call\n  const url = `https://cinopsis.herokuapp.com/api/user/${props.match.match.params.id}`;\n  useEffect(() => {\n    axios.get(url).then(res => {\n      //set the specific user data\n      setUserData(res.data);\n    });\n\n    return function cleanup() {\n      setUserData();\n    };\n  }, [url]);\n\n  return (\n    <div className=\"userInfo\">\n      {userData && (\n        <>\n          <ul>\n            <h2>{userData.user.userName}</h2>\n            {userData.movies.map((movie, index) => {\n              //map through user data movies in order to link to the individual movies\n              return (\n                <li key={index}>\n                  <Link to={`/movie/${movie._id}`}> {movie.title}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nimport './Submit.css';\nconst axios = require('axios');\n\nconst Create = props => {\n  const [title, setTitle] = useState('');\n  const [plot, setPlot] = useState('');\n  const [genre, setGenre] = useState('Horror');\n\n  const postMovie = () => {\n    //set the user input to a movie object to post to Api\n    const newMovie = {\n      title,\n      synopsis: plot,\n      genre,\n      createdBy: localStorage.id\n    };\n\n    axios\n      .post('https://cinopsis.herokuapp.com/api/movies', newMovie)\n      .then(res => {\n        //redirect the user to homepage upon movie submission\n        props.history.push('/');\n      })\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <div>\n      <Form className=\"submitForm\">\n        <Form.Group\n          onChange={evt => setTitle(evt.target.value)}\n          className=\"title-submit\"\n          controlId=\"formBasicText\"\n        >\n          <Form.Label>Title</Form.Label>\n          <Form.Text className=\"text-muted\"></Form.Text>\n          <Form.Control type=\"text\" placeholder=\"Title\" />\n        </Form.Group>\n\n        <Form.Group\n          onChange={evt => setPlot(evt.target.value)}\n          className=\"synopsis-submit\"\n          controlId=\"exampleForm.ControlTextarea1\"\n        >\n          <Form.Label>Synopsis</Form.Label>\n          <Form.Text className=\"text-muted\"></Form.Text>\n          <Form.Control placeholder=\"Plot\" as=\"textarea\" rows=\"15\" />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Genre</Form.Label>\n          <Form.Control\n            onChange={evt => setGenre(evt.target.value)}\n            className=\"genre-submit\"\n            as=\"select\"\n          >\n            <option>Horror</option>\n            <option>Comedy</option>\n            <option>Action</option>\n            <option>Drama</option>\n            <option>Romance</option>\n          </Form.Control>\n\n          <Button\n            onClick={evt => {\n              evt.preventDefault();\n              postMovie();\n            }}\n            className=\"submission-button\"\n            variant=\"warning\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\n\nexport default Create;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nconst axios = require('axios');\n\nconst Login = props => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n\n  const getInfoAndValidate = () => {\n    //Pass user input to the api for verification\n    const info = { email, password, userName: username };\n\n    axios\n      .post('https://cinopsis.herokuapp.com/api/user', info)\n      .then(res => {\n        if (res.data.error) {\n          setError(res.data.error);\n        } else {\n          localStorage.setItem('id', res.data._id);\n          localStorage.setItem('username', res.data.userName);\n          props.history.push('/');\n          window.location.reload();\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <div>\n      <Form className=\"login-form\">\n        <Form.Group\n          onChange={evt => setUsername(evt.target.value)}\n          controlId=\"formBasicText\"\n        >\n          <Form.Label>\n            <span>Username:</span>\n          </Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Choose a username\" />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n        <Form.Group\n          onChange={evt => setEmail(evt.target.value)}\n          controlId=\"formBasicEmail\"\n        >\n          <Form.Label>\n            <span>Email:</span>\n          </Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group\n          onChange={evt => setPassword(evt.target.value)}\n          controlId=\"formBasicPassword\"\n        >\n          <Form.Label>\n            <span>Password</span>\n          </Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" />\n        </Form.Group>\n        <Button\n          onClick={evt => {\n            evt.preventDefault();\n            getInfoAndValidate();\n          }}\n          variant=\"secondary\"\n          type=\"submit\"\n        >\n          <span>SIGN UP</span>\n        </Button>\n        {error && <h3 style={{ color: 'red' }}>{error}</h3>}\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nconst axios = require('axios');\n\nconst Login = props => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const getInfoAndValidate = () => {\n    //Holds the user input generated from the form for user authentication via API axios call\n    const info = { email, password };\n\n    axios\n      .post('https://cinopsis.herokuapp.com/api/user/login', info)\n      .then(res => {\n        if (res.data.error) {\n          setError(res.data.error);\n        } else {\n          //set localStorage with property id and username in order to verify if user is logged in and for user-specific functionality\n          localStorage.setItem('id', res.data._id);\n          localStorage.setItem('username', res.data.userName);\n          //On login, user is directed back to the homepage\n          props.history.push('/');\n          window.location.reload();\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <div>\n      <Form className=\"login-form\">\n        <Form.Group\n          onChange={evt => setEmail(evt.target.value)}\n          controlId=\"formBasicEmail\"\n        >\n          <Form.Label>\n            <span>Email:</span>\n          </Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group\n          onChange={evt => setPassword(evt.target.value)}\n          controlId=\"formBasicPassword\"\n        >\n          <Form.Label>\n            <span>Password:</span>\n          </Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Enter password\" />\n        </Form.Group>\n        <div className=\"loginButtons\">\n          <Button\n            onClick={evt => {\n              evt.preventDefault();\n              getInfoAndValidate();\n            }}\n            variant=\"warning\"\n            type=\"submit\"\n          >\n            LOGIN\n          </Button>\n          <Link to=\"/signup\">\n            <Button className=\"signButton\" variant=\"secondary\">\n              SIGN UP\n            </Button>\n          </Link>\n\n          {error && <h3 style={{ color: 'red' }}>{error}</h3>}\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewAll.css';\n\nconst axios = require('axios');\nconst ViewAll = props => {\n  //use props to match the genre during get call to api for all movies of a specific genre\n  const url = `https://cinopsis.herokuapp.com/api/movies/?genre=${props.match.params.genre}`;\n  const [movieList, setMovieList] = useState([]);\n\n  useEffect(() => {\n    axios.get(url).then(res => setMovieList(res.data));\n    return function cleanup() {\n      setMovieList([]);\n    };\n  }, [url]);\n\n  return (\n    <div>\n      <ul className=\"allMovies\">\n        <h2>{props.match.params.genre}</h2>\n        {movieList.map(movie => {\n          //map through movieList variable to render links for each movie pertaining to the provided genre\n          return (\n            <Link to={`/movie/${movie._id}`}>\n              <li>{movie.title}</li>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ViewAll;\n","import React from 'react';\nimport HeaderContainer from './components/HeaderContainer';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport User from './components/User';\nimport Submit from './components/Submit';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport ViewAll from './components/ViewAll';\nimport { Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst App = () => {\n   return (\n      <div>\n         <div>\n            <HeaderContainer />\n         </div>\n         <main className='appMain'>\n            <Switch>\n               <Route exact path='/' component={Home} />\n               <Route exact path='/new' component={Submit} />\n               <Route exact path='/movie/:id' component={Movie} />\n               <Route exact path='/login' component={Login} />\n               <Route exact path='/signup' component={Signup} />\n               <Route exact path='/genre/:genre' component={ViewAll} />\n               <Route\n                  exact\n                  path='/user/:id'\n                  render={routerProps => <User match={routerProps} />}\n               ></Route>\n            </Switch>\n         </main>\n      </div>\n   );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n\t<Router basename=\"/moviesFrontend\">\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}